
                     W4118 Spring 2009 Working Assignment

Assignment Number:	5
   
GroupID Number:     2        
                         
VMware VM (hostname/vmware#/IP): N/A

   We certify that:
     * The code submitted here compiles properly and runs without
       crashing.
     * While we may have discussed the assignment with others, the code
       submitted is entirely our own group's work and no other student 
       has edited it.
     * So far as we have been able to determine, the program properly
       handles all reasonable inputs.
       
   Name of Group Member 1: Thierry Bertin-Mahieux
   
   Name of Group Member 2: Mengu Sukan

   Name of Group Member 3: Benjamin Warfield
   
   Further instructions to the student: 
     * Check your code to make sure it is readable. You may wish to
       add some comments, change a variable name, or even restructure the
       code. This also often helps you find bugs in the code.
     * Check your code to make sure it is readable. You may wish to
       add some comments, change a variable name, or even restructure the
       code. This also often helps you find bugs in the code.
     * Print your code out and make sure that all the lines fit on the
       page without wrapping.
     * Include this file with the files you submit for your
       programming assignment.  The file should be named "homework_work.txt".
     * Describe below how each member of your group contributed to the
       assignment.  Include a list of C functions and files that you modified
       or implemented and which group member was primarily responsible
       for doing each.  All group members are expected to contribute in
       writing the code for each assignment.
       
Member Contributions:

Modified files:
    arch/i386/kernel/entry.S
        added entry to syscall_table
    include/asm-i386/unistd.h
        added __NR_set_cachepolicy macro and updated __NR_syscalls
    include/linux/syscalls.h
        added declarations for sys_set_cachepolicy
	include/linux/mmzone.h
		
	include/linux/page-flags.h
		Added a new flag (MRUVictim) and associated macros.
	include/linux/mm_inline.h
		Added add_to_safety_list, del_from_safety_list, and modified del_from_lru
	mm/page_alloc.c
	mm/swap.c
	mm/vmscan.c


New Files:
	include/linux/hw5_definitions.h	- CACHE_MRU and CACHE_NORMAL macros
	testing/Makefile	- Makefile for demonstration/test code	
	testing/set_cache_mru.c	- Utility to set the cache policy to MRU
	testing/set_cache_normal.c	- Utility to set the cache policy to LRU
	testing/swap_central.c	- Test script to allocate and traverse a very large linked list.
	testing/demo.sh	- Demo script for timing LRU vs. MRU execution of the demo program.
	testing/vmdemo.sh	- Demo script to time and monitor pageins/pageouts for LRU vs. MRU execution of the demo program.
		

Specific changes:

