
                     W4118 Spring 2009 Working Assignment

Assignment Number:	3
   
GroupID Number:     2        
                         
VMware VM (hostname/vmware#/IP): N/A

   We certify that:
     * The code submitted here compiles properly and runs without
       crashing.
     * While we may have discussed the assignment with others, the code
       submitted is entirely our own group's work and no other student 
       has edited it.
     * So far as we have been able to determine, the program properly
       handles all reasonable inputs.
       
   Name of Group Member 1: Thierry Bertin-Mahieux
   
   Name of Group Member 2: Mengu Sukan

   Name of Group Member 3: Benjamin Warfield
   
   Further instructions to the student: 
     * Check your code to make sure it is readable. You may wish to
       add some comments, change a variable name, or even restructure the
       code. This also often helps you find bugs in the code.
     * Check your code to make sure it is readable. You may wish to
       add some comments, change a variable name, or even restructure the
       code. This also often helps you find bugs in the code.
     * Print your code out and make sure that all the lines fit on the
       page without wrapping.
     * Include this file with the files you submit for your
       programming assignment.  The file should be named "homework_work.txt".
     * Describe below how each member of your group contributed to the
       assignment.  Include a list of C functions and files that you modified
       or implemented and which group member was primarily responsible
       for doing each.  All group members are expected to contribute in
       writing the code for each assignment.
       
Member Contributions:

Modified files:
    arch/i386/kernel/entry.S
        added entries to syscall_table
    arch/i386/kernel/Makefile
        added new file barrier.c to files to build
    include/asm-i386/unistd.h
        added __NR_barrier* macros and updated __NR_syscalls
    include/linux/syscalls.h
        added declarations for sys_barriercreate, sys_barrierwait, and 
        sys_barrierdestroy
    sthreads/sync.h
		Added declarations and publicly-visible structure definitions for 
		sthread counting semaphores.    	
	sthreads/sync.c
		Added implementation of counting semaphores for sthreads
	sthreads/test.c
		Modified to include demonstration code for semaphores.
	sthreads/Makefile
		Modified to run tests when "make test" is called.

New Files:
    arch/i386/kernel/barrier.c
        includes implementation functions for barriers
    barrier_testing/test_barrier.c (not in kernel source tree)
    	test and demonstration code for barriers
    barrier_testing/Makefile
    	makefile for barrier tests
		

Specific changes:

Please note that much of the programming work (and a great deal of brainstorming 
and figuring of things out) was done with two or three of us looking at the 
screen, so individual credit is somewhat questionable.

    * the sthread semaphore implementation and tests were written by Ben, based
	  on pseudocode generated by a full-group design discussion 
    * the three sys_barrier* functions were written by Thierry and Mengu, based
      on similar pseudocode generated in the same discussion.  They were then
      debugged and updated by all three team members.
    * the various utility functions in barrier.c (_leave_barrier, _next_id and
      _get_barrier_node) handle ID management and reference counting (to make
      sure that no barrier struct is destroyed prematurely, and that no thread
      can find a reference to one that has already been destroyed).  They were
      written as needed in the collaborative editing process.
    * the Makefile changes were made by Thierry.
    * the tests in barrier_test.c were divided up and written by all three team 
      members.

