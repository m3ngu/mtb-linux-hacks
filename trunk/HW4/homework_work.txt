
                     W4118 Spring 2009 Working Assignment

Assignment Number:	4
   
GroupID Number:     2        
                         
VMware VM (hostname/vmware#/IP): N/A

   We certify that:
     * The code submitted here compiles properly and runs without
       crashing.
     * While we may have discussed the assignment with others, the code
       submitted is entirely our own group's work and no other student 
       has edited it.
     * So far as we have been able to determine, the program properly
       handles all reasonable inputs.
       
   Name of Group Member 1: Thierry Bertin-Mahieux
   
   Name of Group Member 2: Mengu Sukan

   Name of Group Member 3: Benjamin Warfield
   
   Further instructions to the student: 
     * Check your code to make sure it is readable. You may wish to
       add some comments, change a variable name, or even restructure the
       code. This also often helps you find bugs in the code.
     * Check your code to make sure it is readable. You may wish to
       add some comments, change a variable name, or even restructure the
       code. This also often helps you find bugs in the code.
     * Print your code out and make sure that all the lines fit on the
       page without wrapping.
     * Include this file with the files you submit for your
       programming assignment.  The file should be named "homework_work.txt".
     * Describe below how each member of your group contributed to the
       assignment.  Include a list of C functions and files that you modified
       or implemented and which group member was primarily responsible
       for doing each.  All group members are expected to contribute in
       writing the code for each assignment.
       
Member Contributions:

Modified files:
    arch/i386/kernel/entry.S
        added entries to syscall_table (including many spacers)
    include/asm-i386/unistd.h
        added __NR_*userweight macros and updated __NR_syscalls
    include/linux/syscalls.h
        added declarations for sys_getuserweight and sys_setuserweight
    include/linux/sched.h
        Added macros for new scheduling policy and related constants, moved
        necessary structure definitions from sched.c into this file, and
        modified struct user_struct to include scheduling information for UWRR (time_slice, weight, a list_head to allow the user to be placed in a queue, and a prio_array_t to hold tasks).
    kernel/sched.c
        Modified runqueue_t structure to include UWRR-related fields (a
        counter and a list of user_struct objects with UWRR-scheduled
        tasks).  Updated schedule to select a process from the UWRR
        user-list (in runqueue) when no realtime process is ready and
        there are UWRR-scheduled processes ready.  Updated
        scheduler_tick to handle accounting for UWRR, and updated
        activate/deactivate and setscheduler functions (and a host of
        minor utilities) to deal with the possibility that not all tasks
        are in the two default task lists.  Added debugging function
        displayUserList to allow checking of UWRR user-queue, and
        uwrr_switch_user to handle the case where a UWRR-scheduled
        process calls setuid().  Added implementations of
        sys_setuserweight and sys_getuserweight.
    kernel/user.c
        Modified alloc_uid to initialize new fields in struct user_struct.  
        Modified free_uid to not free user_structs that have UWRR accounting
        information that should not be lost (time_slice and weight).  Added a
        call to uwrr_switch_user to the switch_uid function to handle UWRR 
        tasks.  Updated initialization code to make root user struct contain
        correctly-initialized UWRR information.

New Files:
	(none in kernel tree)
	testing/Makefile	- Makefile for demonstration/test code	
	testing/change_scheduler.c	- utility to change the scheduler of a process
	testing/change_userweight.c	- utility to change the weight of a user
	testing/syscall_tests.c	- test/demo program for new system calls
	testing/infinite_loop.c	- cpu-bound program for UWRR scheduling demo
	testing/setup.sh	- setup script for UWRR scheduling demo
	testing/test_with_signals.pl	- main driver script for scheduling demo
		

Specific changes:

General design options were hashed out in a three-way meeting at the
beginning of break.  System call tests and the bulk of the modifications
to user.c and sched.c were written by Ben.  Scheduling tests and related code
were written by Mengu.  Huge amounts of painful debugging and tracing work was
done jointly by Mengu and Ben, and testing was done jointly in a three-way 
meeting.